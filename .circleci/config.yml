version: 2.1

jobs:
  build-frontend:
    docker: 
      - image: circleci/node:13.8.0
    steps:
    - checkout
    - run: 
        name: "build frontend"
        command: |
          cd frontend
          npm install
          npm run build
    - save_cache:
        paths: frontend/node_modules
        key: frontend-cache


  build-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
    - checkout
    - run:
        name: "build backend"
        command: |
          cd backend
          npm install
          npm run build
    - save_cache:
        paths: backend/node_modules
        key: backend-cache
  test-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
    - checkout
    - restore_cache:
        keys: frontend-cache
    - run:
        name: test frontend
        command: |
          cd frontend
          npm install
          npm run test
  test-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
    - checkout
    - restore_cache:
        keys: backend-cache
    - run:
        name: test-frontend
        command: |
          cd backend
          npm install
          npm run test
  scan-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
    - checkout
    - restore_cache:
        keys: frontend-cache
    - run:
        name: scan frontend for possible vulnerabilities
        command: |
          cd frontend
          npm install
          npm auit --audit-level=critical
  scan-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
    - checkout
    - restore_cache:
        keys: backend-cache
    - run:
        name: scan backend for possible vulnerabilities
        command: |
          cd backend
          npm install
          npm auit --audit-level=critical

workflows:
  default:
    jobs:
      - build-frontend
      - build-backend
      - test-frontend:
          requires:
            - build-frontend
      - test-backend:
          requires:
            - build-backend
      - scan-frontend:
          requires:
            - test-frontend
      - scan-backend:
          requires:
            - test-backend
